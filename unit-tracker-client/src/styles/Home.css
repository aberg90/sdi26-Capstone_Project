.staticGroup {
  background-color: rgba(255, 0, 0, 0.1);
  padding: 10px;
  border-radius: 8px;
}

.staticEntry {
  background-color: rgba(255, 0, 0, 0.3);
  padding: 10px;
  border-radius: 4px;
  color: white;
  font-weight: bold;
}

.draggieboiiiz {
  background-color: rgba(0, 255, 0, 0.1);
  padding: 10px;
  border-radius: 8px;
}

/* attempt grid setup */
.gridSetup {
  display: grid;
  padding: 10px;
  cursor: pointer;
}

.gridBodyLayout {
  display: inline-grid;
  grid-template-columns: 150px 1fr 150px;
  margin: 1px;
  padding: 1px;
  font-weight: bold;
}

/* <div className='gridStyled'>
<div className='gridHeadersLayout'>
    <div className='nameHeader'>Item Name</div>----time, categories, nav buttons
    <div className='descriptionHeader'>Description Name</div>
    <div className='quantityHeader'>Quantity Name</div>
</div>
{items.map((item) => (-----static entries
    <div className='gridLineLayout'>
        <div onClick={() => viewItem(item)} className='item'>{item.name}</div>
        <div onClick={() => viewItem(item)} className='description'>{item.description.length > 100 ? `${item.description.substring(0, 100)}...` : item.description}</div>
        <div onClick={() => viewItem(item)} className='quantity'>{item.quantity}</div>
    </div>
))}
</div> */

/* .gridStyled {
  display: grid;
  padding: 10px;
  cursor: pointer;
}

 https://www.freecodecamp.org/news/complete-guide-to-css-grid/
.gridLineLayout {
  display: inline-grid;
  grid-template-columns: 150px 1fr 150px;
  margin: 1px;
  padding: 1px;
}
.gridHeadersLayout {
  display: inline-grid;
  grid-template-columns: 150px 1fr 150px;
  margin: 1px;
  padding: 1px;
  font-weight: bold;
}

.item {
  grid-column: 1;
}
.nameHeader{
  grid-column: 1;
}

.description {
  grid-column: 2;
}
.descriptionHeader{
  grid-column: 2;
}

.quantity {
  grid-column: 3;
}
.quantityHeader{
  grid-column: 3;
} */
